"use strict";

/*global $*/
$(document).on("click", ".toggle-facets", function () {
    $(this).next(".extra-facets").removeClass("extra-facets");
    $(this).remove();
});

var updatePrivateDisplay = function updatePrivateDisplay() {
    var showPrivate = localStorage.showPrivate === "true";
    $("html").toggleClass("revealed", showPrivate);
    $("input.toggle-private").prop("checked", showPrivate);
};

$(document).on("click", "input.toggle-private", function () {
    localStorage.showPrivate = this.checked;
    updatePrivateDisplay();
});

$(document).on("input", "input[data-id]", function (e) {
    if (!e.target.value) {
        return $(e.target).parents("tr").addClass("has-error").removeClass("has-success");
    }

    $.ajax({
        url: window.location.pathname.replace(/^(\/.*?\/.*?)\/.*$/, "$1/" + e.target.value + "/json"),
        success: function success() {
            $(e.target).parents("tr").addClass("has-error").removeClass("has-success");
        },
        error: function error() {
            $(e.target).parents("tr").addClass("has-success").removeClass("has-error");
        }
    });
});

$(function () {
    $(".select2-select").each(function () {
        $(this).select2({
            tags: true,
            allowClear: $(this).data("placeholder"),
            minimumResultsForSearch: this.options.length > 10 ? 1 : Infinity
        });
    });

    $(".select2-remote").each(function () {
        $(this).select2({
            allowClear: true,
            ajax: {
                url: "/" + $(this).data("record") + "/search",
                dataType: "json",
                data: function data(params) {
                    return {
                        format: "json",
                        filter: (params.term || "") + "*",
                        page: params.page
                    };
                },
                processResults: function processResults(data) {
                    return {
                        results: data.records.map(function (record) {
                            return {
                                id: record._id,
                                // TODO: Generate real title
                                text: record.name
                            };
                        })
                    };
                },
                minInputLength: 3
            }
        });
    });

    var $form = $("form[data-validate]");

    if ($form.length > 0) {
        setInterval(function () {
            $form.find("input[type=submit]").attr("disabled", $form.find(".has-error").length > 0);
        }, 100);
    }

    updatePrivateDisplay();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wdWJsaWMvanMvYXBwLmpzIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsIm9uIiwibmV4dCIsInJlbW92ZUNsYXNzIiwicmVtb3ZlIiwidXBkYXRlUHJpdmF0ZURpc3BsYXkiLCJzaG93UHJpdmF0ZSIsImxvY2FsU3RvcmFnZSIsInRvZ2dsZUNsYXNzIiwicHJvcCIsImNoZWNrZWQiLCJlIiwidGFyZ2V0IiwidmFsdWUiLCJwYXJlbnRzIiwiYWRkQ2xhc3MiLCJhamF4IiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInJlcGxhY2UiLCJzdWNjZXNzIiwiZXJyb3IiLCJlYWNoIiwic2VsZWN0MiIsInRhZ3MiLCJhbGxvd0NsZWFyIiwiZGF0YSIsIm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoIiwib3B0aW9ucyIsImxlbmd0aCIsIkluZmluaXR5IiwiZGF0YVR5cGUiLCJwYXJhbXMiLCJmb3JtYXQiLCJmaWx0ZXIiLCJ0ZXJtIiwicGFnZSIsInByb2Nlc3NSZXN1bHRzIiwicmVzdWx0cyIsInJlY29yZHMiLCJtYXAiLCJyZWNvcmQiLCJpZCIsIl9pZCIsInRleHQiLCJuYW1lIiwibWluSW5wdXRMZW5ndGgiLCIkZm9ybSIsInNldEludGVydmFsIiwiZmluZCIsImF0dHIiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQUEsRUFBRUMsUUFBRixFQUFZQyxFQUFaLENBQWUsT0FBZixFQUF3QixnQkFBeEIsRUFBMEMsWUFBVztBQUNqREYsTUFBRSxJQUFGLEVBQVFHLElBQVIsQ0FBYSxlQUFiLEVBQThCQyxXQUE5QixDQUEwQyxjQUExQztBQUNBSixNQUFFLElBQUYsRUFBUUssTUFBUjtBQUNILENBSEQ7O0FBS0EsSUFBSUMsdUJBQXVCLFNBQXZCQSxvQkFBdUIsR0FBVztBQUNsQyxRQUFJQyxjQUFlQyxhQUFhRCxXQUFiLEtBQTZCLE1BQWhEO0FBQ0FQLE1BQUUsTUFBRixFQUFVUyxXQUFWLENBQXNCLFVBQXRCLEVBQWtD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VUFEVixFQUNzQkgsTUFBTUUsSUFBTixDQUFXLFlBQVgsRUFBeUJwQixNQUF6QixHQUFrQyxDQUR4RDtBQUVILFNBSEQsRUFHRyxHQUhIO0FBSUg7O0FBRUQxQjtBQUNILENBaEREIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsICQqL1xuJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi50b2dnbGUtZmFjZXRzXCIsIGZ1bmN0aW9uKCkge1xuICAgICQodGhpcykubmV4dChcIi5leHRyYS1mYWNldHNcIikucmVtb3ZlQ2xhc3MoXCJleHRyYS1mYWNldHNcIik7XG4gICAgJCh0aGlzKS5yZW1vdmUoKTtcbn0pO1xuXG52YXIgdXBkYXRlUHJpdmF0ZURpc3BsYXkgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2hvd1ByaXZhdGUgPSAobG9jYWxTdG9yYWdlLnNob3dQcml2YXRlID09PSBcInRydWVcIik7XG4gICAgJChcImh0bWxcIikudG9nZ2xlQ2xhc3MoXCJyZXZlYWxlZFwiLCBzaG93UHJpdmF0ZSk7XG4gICAgJChcImlucHV0LnRvZ2dsZS1wcml2YXRlXCIpLnByb3AoXCJjaGVja2VkXCIsIHNob3dQcml2YXRlKTtcbn07XG5cbiQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCJpbnB1dC50b2dnbGUtcHJpdmF0ZVwiLCBmdW5jdGlvbigpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2hvd1ByaXZhdGUgPSB0aGlzLmNoZWNrZWQ7XG4gICAgdXBkYXRlUHJpdmF0ZURpc3BsYXkoKTtcbn0pO1xuXG4kKGRvY3VtZW50KS5vbihcImlucHV0XCIsIFwiaW5wdXRbZGF0YS1pZF1cIiwgZnVuY3Rpb24oZSkge1xuICAgIGlmICghZS50YXJnZXQudmFsdWUpIHtcbiAgICAgICAgcmV0dXJuICQoZS50YXJnZXQpLnBhcmVudHMoXCJ0clwiKVxuICAgICAgICAgICAgLmFkZENsYXNzKFwiaGFzLWVycm9yXCIpLnJlbW92ZUNsYXNzKFwiaGFzLXN1Y2Nlc3NcIik7XG4gICAgfVxuXG4gICAgJC5hamF4KHtcbiAgICAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXihcXC8uKj9cXC8uKj8pXFwvLiokLyxcbiAgICAgICAgICAgIFwiJDEvXCIgKyBlLnRhcmdldC52YWx1ZSArIFwiL2pzb25cIiksXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJChlLnRhcmdldCkucGFyZW50cyhcInRyXCIpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKFwiaGFzLWVycm9yXCIpLnJlbW92ZUNsYXNzKFwiaGFzLXN1Y2Nlc3NcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoZS50YXJnZXQpLnBhcmVudHMoXCJ0clwiKVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImhhcy1zdWNjZXNzXCIpLnJlbW92ZUNsYXNzKFwiaGFzLWVycm9yXCIpO1xuICAgICAgICB9LFxuICAgIH0pO1xufSk7XG5cbiQoZnVuY3Rpb24oKSB7XG4gICAgJChcIi5zZWxlY3QyLXNlbGVjdFwiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLnNlbGVjdDIoe1xuICAgICAgICAgICAgdGFnczogdHJ1ZSxcbiAgICAgICAgICAgIGFsbG93Q2xlYXI6ICQodGhpcykuZGF0YShcInBsYWNlaG9sZGVyXCIpLFxuICAgICAgICAgICAgbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6IHRoaXMub3B0aW9ucy5sZW5ndGggPiAxMCA/IDEgOiBJbmZpbml0eSxcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAkKFwiLnNlbGVjdDItcmVtb3RlXCIpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICQodGhpcykuc2VsZWN0Mih7XG4gICAgICAgICAgICBhbGxvd0NsZWFyOiB0cnVlLFxuICAgICAgICAgICAgYWpheDoge1xuICAgICAgICAgICAgICAgIHVybDogXCIvXCIgKyAkKHRoaXMpLmRhdGEoXCJyZWNvcmRcIikgKyBcIi9zZWFyY2hcIixcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24ocGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyOiAocGFyYW1zLnRlcm0gfHwgXCJcIikgKyBcIipcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6IHBhcmFtcy5wYWdlLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHM6IGRhdGEucmVjb3Jkcy5tYXAoZnVuY3Rpb24ocmVjb3JkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHJlY29yZC5faWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IEdlbmVyYXRlIHJlYWwgdGl0bGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogcmVjb3JkLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWluSW5wdXRMZW5ndGg6IDMsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIHZhciAkZm9ybSA9ICQoXCJmb3JtW2RhdGEtdmFsaWRhdGVdXCIpO1xuXG4gICAgaWYgKCRmb3JtLmxlbmd0aCA+IDApIHtcbiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkZm9ybS5maW5kKFwiaW5wdXRbdHlwZT1zdWJtaXRdXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJkaXNhYmxlZFwiLCAkZm9ybS5maW5kKFwiLmhhcy1lcnJvclwiKS5sZW5ndGggPiAwKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICB9XG5cbiAgICB1cGRhdGVQcml2YXRlRGlzcGxheSgpO1xufSk7XG4iXX0=