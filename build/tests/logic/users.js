"use strict";

var tap = require("tap");
var request = require("request").defaults({ jar: true });

require("../init");

var login = function login(callback) {
    request.post({
        url: "http://localhost:3000/login",
        form: {
            email: "test@test.com",
            password: "test"
        }
    }, callback);
};

tap.test("Login Page", function (t) {
    var url = "http://localhost:3000/login";
    request.get(url, function (err, res) {
        t.error(err, "Error should be empty.");
        t.equal(res.statusCode, 200);
        t.end();
    });
});

tap.test("Logout Page", function (t) {
    var url = "http://localhost:3000/logout";
    request.get(url, function (err, res) {
        t.error(err, "Error should be empty.");
        t.equal(res.statusCode, 200);
        t.end();
    });
});

tap.test("Login then Logout", function (t) {
    login(function () {
        var url = "http://localhost:3000/logout";
        request.get(url, function (err, res) {
            t.error(err, "Error should be empty.");
            t.equal(res.statusCode, 200);
            t.end();
        });
    });
});

tap.test("Incorrect Login", function (t) {
    request.post({
        url: "http://localhost:3000/login",
        form: {
            email: "foo",
            password: "bar"
        }
    }, function (err, res) {
        t.error(err, "Error should be empty.");
        t.equal(res.statusCode, 302);
        t.end();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0cy9sb2dpYy91c2Vycy5qcyJdLCJuYW1lcyI6WyJ0YXAiLCJyZXF1aXJlIiwicmVxdWVzdCIsImRlZmF1bHRzIiwiamFyIiwibG9naW4iLCJjYWxsYmFjayIsInBvc3QiLCJ1cmwiLCJmb3JtIiwiZW1haWwiLCJwYXNzd29yZCIsInRlc3QiLCJ0IiwiZ2V0IiwiZXJyIiwicmVzIiwiZXJyb3IiLCJlcXVhbCIsInN0YXR1c0NvZGUiLCJlbmQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsTUFBTUMsUUFBUSxLQUFSLENBQVo7QUFDQSxJQUFNQyxVQUFVRCxRQUFRLFNBQVIsRUFBbUJFLFFBQW5CLENBQTRCLEVBQUNDLEtBQUssSUFBTixFQUE1QixDQUFoQjs7QUFFQUgsUUFBUSxTQUFSOztBQUVBLElBQU1JLFFBQVEsU0FBUkEsS0FBUSxDQUFDQyxRQUFELEVBQWM7QUFDeEJKLFlBQVFLLElBQVIsQ0FBYTtBQUNUQyxhQUFLLDZCQURJO0FBRVRDLGNBQU07QUFDRkMsbUJBQU8sZUFETDtBQUVGQyxzQkFBVTtBQUZSO0FBRkcsS0FBYixFQU1HTCxRQU5IO0FBT0gsQ0FSRDs7QUFVQU4sSUFBSVksSUFBSixDQUFTLFlBQVQsRUFBdUIsVUFBQ0MsQ0FBRCxFQUFPO0FBQzFCLFFBQU1MLE1BQU0sNkJBQVo7QUFDQU4sWUFBUVksR0FBUixDQUFZTixHQUFaLEVBQWlCLFVBQUNPLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNCSCxVQUFFSSxLQUFGLENBQVFGLEdBQVIsRUFBYSx3QkFBYjtBQUNBRixVQUFFSyxLQUFGLENBQVFGLElBQUlHLFVBQVosRUFBd0IsR0FBeEI7QUFDQU4sVUFBRU8sR0FBRjtBQUNILEtBSkQ7QUFLSCxDQVBEOztBQVNBcEIsSUFBSVksSUFBSixDQUFTLGFBQVQsRUFBd0IsVUFBQ0MsQ0FBRCxFQUFPO0FBQzNCLFFBQU1MLE1BQU0sOEJBQVo7QUFDQU4sWUFBUVksR0FBUixDQUFZTixHQUFaLEVBQWlCLFVBQUNPLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNCSCxVQUFFSSxLQUFGLENBQVFGLEdBQVIsRUFBYSx3QkFBYjtBQUNBRixVQUFFSyxLQUFGLENBQVFGLElBQUlHLFVBQVosRUFBd0IsR0FBeEI7QUFDQU4sVUFBRU8sR0FBRjtBQUNILEtBSkQ7QUFLSCxDQVBEOztBQVNBcEIsSUFBSVksSUFBSixDQUFTLG1CQUFULEVBQThCLFVBQUNDLENBQUQsRUFBTztBQUNqQ1IsVUFBTSxZQUFNO0FBQ1IsWUFBTUcsTUFBTSw4QkFBWjtBQUNBTixnQkFBUVksR0FBUixDQUFZTixHQUFaLEVBQWlCLFVBQUNPLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNCSCxjQUFFSSxLQUFGLENBQVFGLEdBQVIsRUFBYSx3QkFBYjtBQUNBRixjQUFFSyxLQUFGLENBQVFGLElBQUlHLFVBQVosRUFBd0IsR0FBeEI7QUFDQU4sY0FBRU8sR0FBRjtBQUNILFNBSkQ7QUFLSCxLQVBEO0FBUUgsQ0FURDs7QUFXQXBCLElBQUlZLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDQyxDQUFELEVBQU87QUFDL0JYLFlBQVFLLElBQVIsQ0FBYTtBQUNUQyxhQUFLLDZCQURJO0FBRVRDLGNBQU07QUFDRkMsbUJBQU8sS0FETDtBQUVGQyxzQkFBVTtBQUZSO0FBRkcsS0FBYixFQU1HLFVBQUNJLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2JILFVBQUVJLEtBQUYsQ0FBUUYsR0FBUixFQUFhLHdCQUFiO0FBQ0FGLFVBQUVLLEtBQUYsQ0FBUUYsSUFBSUcsVUFBWixFQUF3QixHQUF4QjtBQUNBTixVQUFFTyxHQUFGO0FBQ0gsS0FWRDtBQVdILENBWkQiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0YXAgPSByZXF1aXJlKFwidGFwXCIpO1xuY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoXCJyZXF1ZXN0XCIpLmRlZmF1bHRzKHtqYXI6IHRydWV9KTtcblxucmVxdWlyZShcIi4uL2luaXRcIik7XG5cbmNvbnN0IGxvZ2luID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgcmVxdWVzdC5wb3N0KHtcbiAgICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9sb2dpblwiLFxuICAgICAgICBmb3JtOiB7XG4gICAgICAgICAgICBlbWFpbDogXCJ0ZXN0QHRlc3QuY29tXCIsXG4gICAgICAgICAgICBwYXNzd29yZDogXCJ0ZXN0XCIsXG4gICAgICAgIH0sXG4gICAgfSwgY2FsbGJhY2spO1xufTtcblxudGFwLnRlc3QoXCJMb2dpbiBQYWdlXCIsICh0KSA9PiB7XG4gICAgY29uc3QgdXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbG9naW5cIjtcbiAgICByZXF1ZXN0LmdldCh1cmwsIChlcnIsIHJlcykgPT4ge1xuICAgICAgICB0LmVycm9yKGVyciwgXCJFcnJvciBzaG91bGQgYmUgZW1wdHkuXCIpO1xuICAgICAgICB0LmVxdWFsKHJlcy5zdGF0dXNDb2RlLCAyMDApO1xuICAgICAgICB0LmVuZCgpO1xuICAgIH0pO1xufSk7XG5cbnRhcC50ZXN0KFwiTG9nb3V0IFBhZ2VcIiwgKHQpID0+IHtcbiAgICBjb25zdCB1cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9sb2dvdXRcIjtcbiAgICByZXF1ZXN0LmdldCh1cmwsIChlcnIsIHJlcykgPT4ge1xuICAgICAgICB0LmVycm9yKGVyciwgXCJFcnJvciBzaG91bGQgYmUgZW1wdHkuXCIpO1xuICAgICAgICB0LmVxdWFsKHJlcy5zdGF0dXNDb2RlLCAyMDApO1xuICAgICAgICB0LmVuZCgpO1xuICAgIH0pO1xufSk7XG5cbnRhcC50ZXN0KFwiTG9naW4gdGhlbiBMb2dvdXRcIiwgKHQpID0+IHtcbiAgICBsb2dpbigoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2xvZ291dFwiO1xuICAgICAgICByZXF1ZXN0LmdldCh1cmwsIChlcnIsIHJlcykgPT4ge1xuICAgICAgICAgICAgdC5lcnJvcihlcnIsIFwiRXJyb3Igc2hvdWxkIGJlIGVtcHR5LlwiKTtcbiAgICAgICAgICAgIHQuZXF1YWwocmVzLnN0YXR1c0NvZGUsIDIwMCk7XG4gICAgICAgICAgICB0LmVuZCgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG50YXAudGVzdChcIkluY29ycmVjdCBMb2dpblwiLCAodCkgPT4ge1xuICAgIHJlcXVlc3QucG9zdCh7XG4gICAgICAgIHVybDogXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbG9naW5cIixcbiAgICAgICAgZm9ybToge1xuICAgICAgICAgICAgZW1haWw6IFwiZm9vXCIsXG4gICAgICAgICAgICBwYXNzd29yZDogXCJiYXJcIixcbiAgICAgICAgfSxcbiAgICB9LCAoZXJyLCByZXMpID0+IHtcbiAgICAgICAgdC5lcnJvcihlcnIsIFwiRXJyb3Igc2hvdWxkIGJlIGVtcHR5LlwiKTtcbiAgICAgICAgdC5lcXVhbChyZXMuc3RhdHVzQ29kZSwgMzAyKTtcbiAgICAgICAgdC5lbmQoKTtcbiAgICB9KTtcbn0pO1xuIl19